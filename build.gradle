plugins {
    id 'java-library'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id 'org.ajoberstar.git-publish' version '4.2.2'
}

group = 'com.trophonix'
version = '3.84'
description = 'TradePlus'

repositories {
    mavenLocal()
    mavenCentral()

    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    maven { url = uri('https://oss.sonatype.org/content/repositories/snapshots') }
    maven { url = uri('https://nexus.hc.to/content/repositories/pub_releases') }
    maven { url = uri('https://repo.dakanilabs.com/repository/maven-public/') }
    maven { url = uri('https://jitpack.io') }
    maven { url = uri('https://repo.aikar.co/content/groups/aikar/') }
    maven { url = uri('https://repo.codemc.org/repository/maven-public/') }
    maven { url = uri('https://repo.maven.apache.org/maven2/') }

    maven {
        url("https://repo.coralmc.it/releases")
        credentials {
            username "$mavenUser"
            password "$mavenPassword"
        }

        authentication {
            basic(BasicAuthentication)
        }
    }

}

dependencies {
    compileOnly 'it.coralrp.laroc:api:1.0.10-SNAPSHOT'
    compileOnly 'it.coralrp.laroc.nametags:api:1.0.0-SNAPSHOT'
    compileOnly 'it.coralrp.laroc.chat:api:1.0.1-SNAPSHOT'

    implementation 'com.google.guava:guava:21.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'net.wesjd:anvilgui:1.9.0-SNAPSHOT'
    implementation 'co.aikar:taskchain-bukkit:3.7.2'

    compileOnly 'io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        library(MavenPublication) {
            from components.java

            artifact sourceJar {
                archiveClassifier.set('sources')
                from sourceSets.main.allSource
            }
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

shadowJar {
    archiveBaseName.set('TradePlus')
    archiveClassifier.set('')
    archiveVersion.set('')
}

processResources {
    expand(project: project)
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}